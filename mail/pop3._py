# from email.parser import Parser
# from email.header import decode_header
# from email.utils import parseaddr

# import poplib

# # a.输入邮件地址，密码和POP3服务器地址
# email = input("Email:")
# password = input("Password:")
# pop3_server = input("POP3 server:")

# # b.连接到POP3服务器
# server = poplib.POP3(pop3_server)

# # c.打开或关闭调试信息
# server.set_debuglevel(1)

# # d.可选：打印POP3服务器的欢迎文字
# print(server.getwelcome().decode("utf-8"))

# # e.身份认证
# server.user(email)
# server.pass_(password)

# # f.stat()返回邮件数量和占用空间
# print("Message:%s.Size:%s" % server.stat())

# # g.list()返回所有邮件的编号
# resp, mails, octets = server.list()
# print(mails)

# # h.获取最新一封邮件
# index = len(mails)
# resp, lines, octets = server.retr(index)

# # i.获取整个邮件的原始文本
# msg_content = b"\r\n".join(lines).decode("utf-8")
# msg = Parser().parsestr(msg_content)

# # 解析邮件
# def decode_str(s):
#     value, charset = decode_header(s)[0]
#     if charset:
#         value = value.decode(charset)
#     return value


# def guess_charset(msg):
#     charset = msg.get_charset()
#     if charset is None:
#         content_type = msg.get("Content-Type", "").lower()
#         pos = content_type.find("charset=")
#         if pos >= 0:
#             charset = content_type[pos + 8 :].strip()
#     return charset


# # indent用于缩进显示:
# def print_info(msg, indent=0):
#     if indent == 0:
#         for header in ["From", "To", "Subject"]:
#             value = msg.get(header, "")
#             if value:
#                 if header == "Subject":
#                     value = decode_str(value)
#                 else:
#                     hdr, addr = parseaddr(value)
#                     name = decode_str(hdr)
#                     value = "%s <%s>" % (name, addr)
#             print("%s%s: %s" % ("  " * indent, header, value))
#     if msg.is_multipart():
#         parts = msg.get_payload()
#         for n, part in enumerate(parts):
#             print("%spart %s" % ("  " * indent, n))
#             print("%s--------------------" % ("  " * indent))
#             print_info(part, indent + 1)
#     else:
#         content_type = msg.get_content_type()
#         if content_type == "text/plain" or content_type == "text/html":
#             content = msg.get_payload(decode=True)
#             charset = guess_charset(msg)
#             if charset:
#                 content = content.decode(charset)
#             print("%sText: %s" % ("  " * indent, content + "..."))
#         else:
#             print("%sAttachment: %s" % ("  " * indent, content_type))


# if __name__ == "__main__":
#     print_info(msg, indent=0)

# server.quit()
